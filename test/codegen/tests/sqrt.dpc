# mir_passes lir_passes

@preserve
"test:main" {
	let x: score = null;
	call %x run "test:sqrt", 4s;
	use %x;
}

"test:sqrt" score : score {
	# Setup
	let tmp0: score = val &0;
	let tmp1: score = val &0;
	let tmp2: score = val &0;
	let tmp3: score = val &0;
	let out: score = val &0;

	# Range-specific
	if lte &0, 13924s:
		call %out run "test:sqrt1", %out;
	if gte &0, 13925s:
		if lte &0, 16777216s:
			call %out run "test:sqrt2", %out;
	if gte &0, 16777217s:
		call %out run "test:sqrt3", %out;

	# Run
	div %tmp0, %out;
	add %out, %tmp0;
	div %out, 2s;

	div %tmp1, %out;
	add %out, %tmp1;
	div %out, 2s;

	div %tmp2, %out;
	add %out, %tmp2;
	div %out, 2s;

	div %tmp3, %out;
	add %out, %tmp3;
	div %out, 2s;
	retv 0, %out;
}

"test:sqrt1" score : score {
	sub &0, 1s;
	div &0, 119s;
	add &0, 1s;
	retv 0, &0;
}

"test:sqrt2" score : score {
	sub &0, 13924s;
	div &0, 4214s;
	add &0, 118s;
	retv 0, &0;
}

"test:sqrt3" score : score {
	sub &0, 16777216s;
	div &0, 50436s;
	add &0, 4096s;
	retv 0, &0;
}
