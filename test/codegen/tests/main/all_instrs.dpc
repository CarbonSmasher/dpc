"test:main" {
	let x: score = val 7s;
	set %x, %x;
	add %x, 1s;
	sub %x, 1s;
	mul %x, 1s;
	div %x, 1s;
	mod %x, 1s;
	min %x, 1s;
	max %x, 1s;
	let y: score = val 3s;
	swap %x, %y;
	rm %x;
	abs %x;
	not %x;
	and %x, %y;
	or %x, %y;
	xor %x, %y;
	use %x;
	pow %x, 3s;
	get %x, 1.0;
	say "foo";
	me "foo";
	tm "foo";
	banl;
	bani "foo";
	bani "foo", "bar";
	pari "foo";
	wlon;
	wloff;
	wlrl;
	wll;
	lsp;
	rl;
	seed;
	stop;
	stops;
	diffg;
	diffs hard;
	specs;
	tell "foo", "bar";
	kill "foo";
	ench "foo", "minecraft:power", 5;
	xps "foo", 6, levels;
	xps "foo", 98, points;
	xpa "foo", 45, levels;
	xpg "foo", points;
	taga "foo", "bar";
	tagr "foo", "bar";
	tagl "foo";
	mnt "foo", "bar";
	dmnt "foo";
	spec "foo", "bar";
	sbor "foo";
	sbol;
	trga "foo", 6;
	trgs "foo", 0;
	dpd "foo";
	dpe "foo";
	lspu;
	sboa "foo", dummy;
	sboa "bar", "foo.bar";
	sws 0 ~6 8, ~3.0;
	smn "minecraft:zombie", ~0.0 ~0.0 ~0.0, {"CustomName":"Foo"};
	smn "minecraft:zombie", ~0.0 ~0.0 ~0.0, {};
	call run "test:foo", 7s, 82ni;
	callx "#minecraft:tick";
	itmg @s[], "stick" {"foo":3nb}, 6;
	itmg @s[], "stick" {}, 1;
	effc @s[];
	effc @s[], "speed";
	effg @s[], "speed", 4, 8, true;
	effg @s[], "speed", 4, 8, false;
	effg @s[], "speed", 4, 1, false;
	effg @s[], "speed", 30, 1, false;
	effg @s[], "speed", infinite, 1, false;
	effg @s[], "speed", infinite, 1, true;
	tims 85.0t;
	tima 4.0d;
	cmt " This does something";
	cmd "execute store result score #foo bar run data get entity @s Health";
	itmc @s[];
	ssp @r[], ~0 ~0 ~5, 0.0;
	tpe @a[], @s[];
	tpe @s[], @e[];
	tpl @s[], 0.0 0.0 ~0.0;
	tpr @s[], 0.0 0.0 0.0, 0.4 ~4.0;
	tpfl @s[], 0.0 0.0 0.0, 0.4 ~4.0 7.4;
	tpfe @s[], 0.0 0.0 0.0, @p[];
	grsb "doFireTick", true;
	grsi "randomTickSpeed", 2345;
	grg "doDaylightCycle";
	loc bio, "minecraft:taiga";
	wba 0.5, 0;
	wbs 0.0, 64;
	wbg;
	wbc 0 ~3 ~0;
	wbd 0.4;
	wbb 24.0;
	wbwd 0.8;
	wbwt 3;
	ply "entity.ender_dragon.roar", master, @s[], ~0.0 ~0.0 ~0.0, 1.0, 2.0, 0.0;
	sb ~0 ~0 ~0, "stone"{}[], replace;

	retr:
		say "hello";
}

"test:foo" score nint {
	ret 7s;
}
